# This is a basic workflow to help you get started with Actions

name: Main CI

# Controls when the workflow will run
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  windows:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.4
      # Runs a set of commands using the runners shell
      - name: setup windows
        run: |
          RefreshEnv
          mkdir "%HAXELIB_ROOT%"
          haxelib setup "%HAXELIB_ROOT%"
          haxelib install lime
          RefreshEnv
  
          haxelib install hxp
          haxelib install openfl
          haxelib install flixel
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
  
          haxelib run lime setup
          haxelib run lime setup flixel
          haxelib run lime setup flixel-tools
  
          haxelib install haxe-strings
          haxelib install firetongue
          haxelib install hxcpp-debug-server
          haxelib install polymod
          haxelib git actuate https://github.com/jgranick/actuate
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git hscript https://github.com/HaxeFoundation/hscript
          haxelib git hxvm-luajit https://github.com/nebulazorua/hxvm-luajit
          haxelib git linc_luajit https://github.com/EnigmaEngine/linc_luajit
          haxelib git tjson https://github.com/MasterEric/TJSON
          haxelib git extension-webm https://github.com/EnigmaEngine/extension-webm
          haxelib run lime rebuild extension-webm windows
  
          haxelib install mlib
          haxelib install test-adapter
          haxelib install munit
          haxelib install hamcrest
          haxelib git mockatoo https://github.com/EnigmaEngine/mockatoo
  
          haxelib list
      - name: build windows
        run: |
          haxelib run lime build windows -DembedAssets -DexcludeExampleMods -DpreloadAssets -DincludeDefaultWeeks 
          haxelib run lime build windows -DembedAssets -DexcludeExampleMods -DpreloadAssets
      - name: test windows
        run: |          
          cd ./test
          haxelib run munit gen
          haxelib run lime test windows
      - uses: actions/upload-artifact@v2
        with:
          name: Windows x64 (Base)
          path: export/release/base/x64/windows/bin
      - uses: actions/upload-artifact@v2
        with:
          name: Windows x64 (Vanilla)
          path: export/release/vanilla/x64/windows/bin
  linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.3
      # Runs a set of commands using the runners shell
      - name: setup linux
        run: |
          sudo add-apt-repository ppa:haxe/releases -y
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib haxe -y
          mkdir "%HAXELIB_ROOT%"
          haxelib setup "%HAXELIB_ROOT%"
          haxelib install lime
          
          haxelib install hxp
          haxelib install openfl
          haxelib install flixel
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
  
          haxelib run lime setup
          haxelib run lime setup flixel
          haxelib run lime setup flixel-tools
  
          haxelib install haxe-strings
          haxelib install firetongue
          haxelib install hxcpp-debug-server
          haxelib install polymod
          haxelib git actuate https://github.com/jgranick/actuate
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git hscript https://github.com/HaxeFoundation/hscript
          haxelib git hxvm-luajit https://github.com/nebulazorua/hxvm-luajit
          haxelib git linc_luajit https://github.com/EnigmaEngine/linc_luajit
          haxelib git tjson https://github.com/MasterEric/TJSON
          haxelib git extension-webm https://github.com/EnigmaEngine/extension-webm
          haxelib run lime rebuild extension-webm windows
  
          haxelib install mlib
          haxelib install test-adapter
          haxelib install munit
          haxelib install hamcrest
          haxelib git mockatoo https://github.com/EnigmaEngine/mockatoo

          haxelib list
      - name: build linux
        run: |
          haxelib run lime build linux -DembedAssets -DexcludeExampleMods -DpreloadAssets -DincludeDefaultWeeks 
          haxelib run lime build linux -DembedAssets -DexcludeExampleMods -DpreloadAssets
      - name: test linux
        run: |
          cd ./test
          haxelib run munit gen
          haxelib run lime test linux
      - uses: actions/upload-artifact@v2
        with:
          name: Linux x64 (Base)
          path: export/release/base/x64/linux/bin
      - uses: actions/upload-artifact@v2
        with:
          name: Linux x64 (Vanilla)
          path: export/release/vanilla/x64/linux/bin
  html5:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: krdlab/setup-haxe@v1
        with:
          haxe-version: 4.2.4
      # Runs a set of commands using the runners shell
      - name: install html5
        run: |
          sudo add-apt-repository ppa:haxe/releases -y
          sudo apt-get update
          sudo apt-get install gcc-multilib g++-multilib haxe -y
          mkdir "%HAXELIB_ROOT%"
          haxelib setup "%HAXELIB_ROOT%"
          haxelib install lime
          
          haxelib install hxp
          haxelib install openfl
          haxelib install flixel
          haxelib install flixel-tools
          haxelib install flixel-ui
          haxelib install flixel-addons
  
          haxelib run lime setup
          haxelib run lime setup flixel
          haxelib run lime setup flixel-tools
  
          haxelib install haxe-strings
          haxelib install firetongue
          haxelib install hxcpp-debug-server
          haxelib install polymod
          haxelib git actuate https://github.com/jgranick/actuate
          haxelib git discord_rpc https://github.com/Aidan63/linc_discord-rpc
          haxelib git hscript https://github.com/HaxeFoundation/hscript
          haxelib git hxvm-luajit https://github.com/nebulazorua/hxvm-luajit
          haxelib git linc_luajit https://github.com/EnigmaEngine/linc_luajit
          haxelib git tjson https://github.com/MasterEric/TJSON
          haxelib git extension-webm https://github.com/EnigmaEngine/extension-webm
          haxelib run lime rebuild extension-webm windows
  
          haxelib install mlib
          haxelib install test-adapter
          haxelib install munit
          haxelib install hamcrest
          haxelib git mockatoo https://github.com/EnigmaEngine/mockatoo

          haxelib list
      - name: build html5
        run: |
          haxelib run lime build html5 -DexcludeExampleMods -DincludeDefaultWeeks 
          haxelib run lime build html5 -DexcludeExampleMods
      - uses: actions/upload-artifact@v2
        with:
          name: HTML5 (Base)
          path: export/release/base/x86/html5/bin
      - uses: actions/upload-artifact@v2
        with:
          name: HTML5 (Vanilla)
          path: export/release/vanilla/x86/html5/bin
  # I haven't gotten unit testing working on HTML5 yet,
  # so for now HTML5 only does compilation checking.
